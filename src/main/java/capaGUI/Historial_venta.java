/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package capaGUI;

import capaPersistencia.ConexionSQLite;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vizcacha
 */
public class Historial_venta extends javax.swing.JPanel {

    /**
     * Creates new form Historial_venta
     */
    public Historial_venta() {
        initComponents();
        configurarTabla();     // Definir columnas correctas
        cargarVentas();  
        Table_ventas.setFillsViewportHeight(true);
        Table_ventas.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        // ✅ Hace que el scroll pane se expanda completamente
        jScrollPane1.setPreferredSize(this.getSize());
        jScrollPane1.setSize(this.getSize());

        // ✅ Asegura que el layout se actualice bien
        this.setLayout(new java.awt.BorderLayout());
        this.removeAll();
        this.add(jScrollPane1, java.awt.BorderLayout.CENTER);
        this.revalidate();
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table_ventas = new javax.swing.JTable();

        Table_ventas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table_ventas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(451, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(259, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void configurarTabla() {
    Table_ventas.setModel(new DefaultTableModel(
        new Object[][] {},
        new String[] {
            "ID Venta", "Fecha", "Cliente", "Vendedor", "Producto", "Cantidad", "Subtotal"
        }
    ));
}

private void cargarVentas() {
    String sql = """
        SELECT 
            v.id_venta,
            v.fecha,
            cliente.nombre AS nombre_cliente,
            vendedor.nombre AS nombre_vendedor,
            p.nombre AS producto,
            dv.cantidad,
            dv.subtotal
        FROM ventas v
        JOIN detalle_venta dv ON v.id_venta = dv.id_venta
        JOIN productos p ON dv.id_producto = p.id_producto
        JOIN personas cliente ON v.id_cliente = cliente.id_persona
        JOIN personas vendedor ON v.id_vendedor = vendedor.id_persona
        ORDER BY v.id_venta
    """;

    try (Connection conn = ConexionSQLite.conectar();
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(sql)) {

        DefaultTableModel modelo = (DefaultTableModel) Table_ventas.getModel();
        modelo.setRowCount(0); // Limpiar la tabla antes

        while (rs.next()) {
            Object[] fila = {
                rs.getInt("id_venta"),
                rs.getString("fecha"),
                rs.getString("nombre_cliente"),
                rs.getString("nombre_vendedor"),
                rs.getString("producto"),
                rs.getInt("cantidad"),
                rs.getDouble("subtotal")
            };
            modelo.addRow(fila);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al cargar ventas:\n" + e.getMessage());
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_ventas;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
