/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package capaGUI;

import capaDatos.Persona;
import capaGUI.GestionProductos.ConexionSQLite;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author vizcacha
 */
public class Inicia_Sesion extends javax.swing.JPanel {

    /**
     * Creates new form Inicia_Sesion
     */
    public Inicia_Sesion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_NUsuario = new javax.swing.JTextField();
        Password_Contraseña = new javax.swing.JPasswordField();
        jButton_IniciarSesion = new javax.swing.JButton();

        jLabel3.setText("Nombre de Usuario");

        jLabel4.setText("Contraseña");

        jButton_IniciarSesion.setText("Iniciar Sesion");
        jButton_IniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_IniciarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_IniciarSesion)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(Password_Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(txt_NUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(464, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_NUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Password_Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton_IniciarSesion)
                .addContainerGap(343, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_IniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_IniciarSesionActionPerformed
        // TODO add your handling code here:
        this.validarInicioSesion();
    }//GEN-LAST:event_jButton_IniciarSesionActionPerformed

private void validarInicioSesion() {
    String usuarioOCorreo = txt_NUsuario.getText();
    String contraseña = new String(Password_Contraseña.getPassword());
    String hashContraseña = hashSHA256(contraseña);

    String sql = """
        SELECT * FROM personas 
        WHERE (usuario = ? OR correo = ?) AND clave = ?
        """;

    try (Connection conn = ConexionSQLite.conectar();
         PreparedStatement stmt = conn.prepareStatement(sql)) {

        stmt.setString(1, usuarioOCorreo);
        stmt.setString(2, usuarioOCorreo);
        stmt.setString(3, hashContraseña);

       try (ResultSet rs = stmt.executeQuery()) {
            if (rs.next()) {
                Persona persona = new Persona(
                    rs.getInt("id_persona"),
                    rs.getString("nombre"),
                    rs.getString("dni"),
                    rs.getString("tipo"),
                    rs.getString("correo"),
                    rs.getString("usuario")
                );

                MenuPrincipal ventana = (MenuPrincipal) SwingUtilities.getWindowAncestor(this);
                ventana.setUsuarioActual(persona);

                JOptionPane.showMessageDialog(this, "Inicio de sesión exitoso como " + persona.getTipo());

                ventana.actualizarInterfazPorRol(); // método que oculta botones
                ventana.cambiarPanel(new PuntoDeVenta());

            } else {
                JOptionPane.showMessageDialog(this, "Credenciales incorrectas");
            }
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al conectar: " + e.getMessage());
    }
}

public static String hashSHA256(String input) {
    try {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        byte[] hash = md.digest(input.getBytes(StandardCharsets.UTF_8));
        StringBuilder hexString = new StringBuilder();
        for (byte b : hash) {
            hexString.append(String.format("%02x", b));
        }
        return hexString.toString();
    } catch (NoSuchAlgorithmException e) {
        throw new RuntimeException("Error al hashear la contraseña", e);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField Password_Contraseña;
    private javax.swing.JButton jButton_IniciarSesion;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txt_NUsuario;
    // End of variables declaration//GEN-END:variables
}
